@mixin tl-dropdonwlist-theme($theme) {

  $base-text: map_get(map_get($theme,base),text);
  $base-background:  map_get(map_get($theme,base),background);

  $icon-text:  map_get(map_get($theme,icons),text);
  $border:  map_get($theme,borders);

  $error-text: map_get(map_get($theme,error),text);
  $error-border: map_get(map_get($theme,error),border);
  $error-background: map_get(map_get($theme,error),background);
  $success-border: map_get(map_get($theme,success),border);
  $success-background: map_get(map_get($theme,success),background);

  $disable-text:  map_get(map_get($theme,disable),text);
  $disable-background:  map_get(map_get($theme,disable),background);

  $select-text: map_get(map_get($theme,selected),text);
  $select-background: map_get(map_get($theme,selected),background);
  $scroll-thumb: map_get(map_get($theme,scrollbar),thumb);

  .tl-dropdown-list-box {
    > .labeltext {
      color: $base-text;
      > b.required {
        color: $error-text;
      }
    }
    > .wrapper {
      > .select {
        background: $base-background;
        color: $base-text;
        border: 1px solid $border;
      }
      > .select:hover {
        background-color: $base-background;
      }
      > .select:active {
        background-color: $base-background;
      }
      > .select.-hasValidation.ng-invalid.ng-touched:not(dropdown) {
        border: 1px solid $error-border;
        background-color: #FFF1F1;
      }
      > .select.-hasValidation.ng-valid[required], .select.-hasValidation.ng-valid.required {
        border: 1px solid $success-border;
        background-color: $success-background;
      }
      > .dropdown-list-icon i {
        color: $icon-text;
      }
      > .dropdown-list-wrapper-select {
        border: 1px solid $border;
        > .dropdown-list-select {
          border: 1px solid $border;
          background-color: $base-background;
          color: $base-text;
          > li {
            color: $base-text;
          }
          > li:hover {
            background-color: $select-background;
            color: $select-text;
          }
          > li:focus {
            background-color: $select-background;
            color: $select-text;
          }
          > li:active {
            background-color: $base-background;
            color: $base-text;
          }
        }
        > .dropdown-list-select::-webkit-scrollbar-thumb {
          background-color: $scroll-thumb;
        }
        > .-placeholder {
          color: $base-text;
          background-color: $base-background;
          border: 1px solid $border;
        }
        .-placeholder:focus {
          background-color: $select-background;
          color: $select-text;
        }
      }
      > .disabled::placeholder, .disabled {
        opacity: 0.45;
        color: #000000;
      }
    }
  }

  .search-input {
    >.search-input-icon {
      color: $icon-text;
    }
    >.search-input-field {
      color: $icon-text;
      border: 1px solid $border;
    }
  }

  .selected {
    background: $select-background;
    color: $select-text;
  }

  .ui-overlap{
    color: $base-text;
    border: 1px solid $border;
    background-color: $base-background;
  }
}
